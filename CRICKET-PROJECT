##This project aims at extracting ODI cricket world cup 2019 data from espn website and creating a dashboard visualization

#Importing modules
import numpy as np
import pandas as pd
import requests
from dateutil.parser import parse              #dunno why this is required
from bs4 import BeautifulSoup
import seaborn as sns
import matplotlib.pyplot as plt
import matplotlib.ticker as mticks

##Date Collection   - followed this video - https://youtu.be/aGCyqj8nPKw
url = 'https://stats.espncricinfo.com/ci/engine/records/team/match_results.html?id=12357;type=tournament'

cric=requests.get(url)
#print(cric)
soup =BeautifulSoup(cric.text,"lxml")
table=soup.find("table",class_="engineTable")

#Extracting headers
headers = table.find_all("th")
#print(headers)
titles=[]
for i in headers:
    title= i.text
    titles.append(title)

#print(titles)
raw_df= pd.DataFrame(columns= titles)
#print(df)

#Extracting entire table details(all the rows)
rows= table.find_all("tr")

for i in rows[1:]:            #we start from 1 and not zero because we skip the first row which is for headers
    data= i.find_all("td")
    row=[tr.text for tr in data]
    #print(row)
    #now we need to append these values to the dataframe, each row in each index 
    l = len(raw_df)
    raw_df.loc[l]=row
#print(df)

#df.to_csv("ODI_WC_2019.csv")      #saving as a csv

##Data Cleaning -- followed this video- https://youtu.be/4QkYy1wANXA

def cleaning(df):
    return df.rename(columns={'Scorecard':'Matchid'},inplace=True)

def remove_odi(df):
    df['Matchid']=df['Matchid'].apply(lambda x: x.replace('ODI #',''))
    return df

df = (raw_df.pipe(cleaning).pipe(remove_odi))
fig, ax= plt.subplots(figsize=(10,6))
ax.plot(df['Team 1'], df['Matchid'])
